library(reshape2)
setwd("/Users/HMCLoaner/bee")
round.POSIXct <- function(x, units = c("mins", "5 mins", "10 mins", "15
mins", "quarter hours", "30 mins", "half hours", "hours")){
if(is.numeric(units)) units <- as.character(units)
units <- match.arg(units)
r <- switch(units,
"mins" = 60,
"5 mins" = 60*5,
"10 mins" = 60*10,
"15 mins"=, "quarter hours" = 60*15,
"30 mins"=, "half hours" = 60*30,
"hours" = 60*60
)
H <- as.integer(format(x, "%H"))
M <- as.integer(format(x, "%M"))
S <- as.integer(format(x, "%S"))
D <- format(x, "%Y-%m-%d")
secs <- 3600*H + 60*M + S
as.POSIXct(round(secs/r)*r, origin=D)
}
#Field observation data from google docs
url='docs.google.com/spreadsheets/d/1LKr8Ken8p1jpTGpbn2a_napP6uNJ4sEnN8gdDSEQGxY/edit#gid=1630939193'
mydat=read.csv(text=gsheet2text(url, format='csv'))
head(mydat)
size=strsplit(as.character(mydat$Location), ' ')
df=as.data.frame(t(matrix(unlist(size), 3)))
names(df)=c('non', 'Pair', 'Size')
mydat=cbind(mydat, df[,2:3])
head(mydat)
names(mydat)
mydat$tot_flowers=mydat$Avg.open.flowers.per.inflorescenc*mydat$Total.inflorescenses
mydat_small=mydat[, c('Date', 'Experiment.Week','Location', 'Plant.Number','Pair','Size', 'Start.Time',
'End.Time', 'Avg.open.flowers.per.inflorescence', 'Total.inflorescenses', 'Honeybees')]
#nectar data from google docs
url='docs.google.com/spreadsheets/d/1LKr8Ken8p1jpTGpbn2a_napP6uNJ4sEnN8gdDSEQGxY/edit#gid=212997740'
nect=read.csv(text=gsheet2text(url, format='csv'))
head(nect)
summary(nect)
size=strsplit(as.character(nect$Location), ' ')
df=as.data.frame(t(matrix(unlist(size), 3)))
names(df)=c('non', 'Pair', 'Size')
nect=cbind(nect[1:nrow(df),], df[,2:3])
nect$sugar.concentration=as.numeric(as.character(nect$sugar.concentration))
nect$sugar.content..µg.=as.numeric(as.character(nect$sugar.content..µg.))
nect=nect[which(nect$sugar.concentration<1.9),]
nect_small=nect[, c('Experiment.Week','Location','Plant.number','Pair', 'Size', 'volume.of.nectar..µl.','sugar.concentration',
'sugar.content..µg.')]
head(nect_small)
zeros=which(nect_small$sugar.concentration==0)
nect_small=nect_small[-zeros, ]
nect_small=na.omit(nect_small)
##average of 5 flowers
volume=acast(nect_small[,c(1:2,6)],  Experiment.Week~Location, mean)
conc=acast(nect_small[,c(1:2, 7)],  Experiment.Week~Location, mean)
content=acast(nect_small[,c(1:2,8)],  Experiment.Week~Location, mean)
##variance of 5 flowers
volume_var=acast(nect_small[,c(1:2,6)],  Experiment.Week~Location, var)
conc_var=acast(nect_small[,c(1:2, 7)],  Experiment.Week~Location, var)
content_var=acast(nect_small[,c(1:2,8)],  Experiment.Week~Location, var)
vol=melt(volume)
sugar.conc=melt(conc)
sugar.content=melt(content)
vol_var=melt(volume_var)
sugar.conc_var=melt(conc_var)
sugar.content_var=melt(content_var)
mean_nect=cbind(vol[,1:2], data.frame(vol$value, sugar.conc$value, sugar.content$value, vol_var$value, sugar.conc_var$value,sugar.content_var$value))
names(mean_nect)=c("Experiment.Week", "Location", 'Volume', "Sugar_conc", 'Sugar_content', 'Volume_var', 'Sugar_conc_var', 'Sugar_content_var')
mean_nect=mean_nect[order(mean_nect$Experiment.Week), ]
head(mean_nect)
add2=mean_nect[mean_nect$Experiment.Week==2,]
add3=mean_nect[mean_nect$Experiment.Week==3,]
mean_nect=rbind(mean_nect[mean_nect$Experiment.Week==1,], add2,add2, add3, add3)
mean_nect=mean_nect[order(mean_nect$Location), ]
#
mydat_small=mydat_small[-which(mydat_small$Experiment.Week==4),]
#
mydat_small=mydat_small[order(mydat_small$Location), ]
merged=cbind(mydat_small, mean_nect)
names(merged)
merged=merged[, -c(12:13)]
#merge weather station data with pollinator visitation data
url2='docs.google.com/spreadsheets/d/1Wm0LVMGEWBQnz6jsSKjdrzKi5ARMhUAzZMN_chvg7M4/edit?usp=sharing'
weather=read.csv(text=gsheet2text(url2, format='csv'))
head(weather)
weather=weather[-which(weather$Time=="Time"),]
summary(weather)
summary(merged)
obs_start=paste(merged$Date, merged$Start.Time)
obs_start_pos=as.POSIXct(obs_start , format = "%m/%d/%Y %H:%M")
obs_end=paste(merged$Date, merged$End.Time)
obs_end_pos=as.POSIXct(obs_end , format = "%m/%d/%Y %H:%M")
weatime=paste(weather$Date, weather$Time)
weatime_pos=as.POSIXct(weatime , format = "%m/%d/%Y %H:%M %p")
#
#
comp=weatime_pos[68]
a=obs_start_pos[11]
b=obs_end_pos[11]
obs_start_pos_rd=round.POSIXct(obs_start_pos, 'quarter hours')
obs_end_pos_rd=round.POSIXct(obs_end_pos, 'quarter hours')
weatime_pos_rd=round.POSIXct(weatime_pos, 'quarter hours')
weather_index=c()
for(i in 1:length(obs_start_pos)){
#tms=weatime_pos[which(weatime_pos_rd==obs_start_pos_rd[i]|weatime_pos_rd==obs_start_pos_rd[i]-15*60|weatime_pos_rd==obs_end_pos_rd[i]|(weatime_pos_rd==obs_end_pos_rd[i]+15*60))]
tms=weatime_pos[which(weatime_pos_rd==obs_start_pos_rd[i]|weatime_pos_rd==obs_end_pos_rd[i])]
if(length(tms)==0){
print(i)
weather_index[i]=0}
else{
weather_index[i]=which(weatime_pos_rd==obs_start_pos_rd[i]|weatime_pos_rd==obs_end_pos_rd[i])[1]
}}
weather_match=weather[weather_index,]
dim(weather_match)
bee_data_final=cbind(merged, weather_match[,c('Temperature', 'Humidity', 'Wind','Speed','Gust', 'Pressure','Solar')])
write.csv(bee_data_final, file="pollinator_visitation_fullData.csv")
View(bee_data_final)
head(bee_data_final)
bee_data_final[order(bee_data_final$Date),]
bee_data_final=bee_data_final[order(bee_data_final$Date),]
head(bee_data_final)
bee_data_final$Start.Time=obs_start_pos
bee_data_final$End.Time=obs_end_pos
#data formatting for further pollinator visitation analysis
#
library(reshape2)
setwd("/Users/HMCLoaner/bee")
round.POSIXct <- function(x, units = c("mins", "5 mins", "10 mins", "15
mins", "quarter hours", "30 mins", "half hours", "hours")){
if(is.numeric(units)) units <- as.character(units)
units <- match.arg(units)
r <- switch(units,
"mins" = 60,
"5 mins" = 60*5,
"10 mins" = 60*10,
"15 mins"=, "quarter hours" = 60*15,
"30 mins"=, "half hours" = 60*30,
"hours" = 60*60
)
H <- as.integer(format(x, "%H"))
M <- as.integer(format(x, "%M"))
S <- as.integer(format(x, "%S"))
D <- format(x, "%Y-%m-%d")
secs <- 3600*H + 60*M + S
as.POSIXct(round(secs/r)*r, origin=D)
}
#Field observation data from google docs
url='docs.google.com/spreadsheets/d/1LKr8Ken8p1jpTGpbn2a_napP6uNJ4sEnN8gdDSEQGxY/edit#gid=1630939193'
mydat=read.csv(text=gsheet2text(url, format='csv'))
head(mydat)
size=strsplit(as.character(mydat$Location), ' ')
df=as.data.frame(t(matrix(unlist(size), 3)))
names(df)=c('non', 'Pair', 'Size')
mydat=cbind(mydat, df[,2:3])
head(mydat)
names(mydat)
mydat$tot_flowers=mydat$Avg.open.flowers.per.inflorescenc*mydat$Total.inflorescenses
mydat_small=mydat[, c('Date', 'Experiment.Week','Location', 'Plant.Number','Pair','Size', 'Start.Time',
'End.Time', 'Avg.open.flowers.per.inflorescence', 'Total.inflorescenses', 'Honeybees')]
#nectar data from google docs
url='docs.google.com/spreadsheets/d/1LKr8Ken8p1jpTGpbn2a_napP6uNJ4sEnN8gdDSEQGxY/edit#gid=212997740'
nect=read.csv(text=gsheet2text(url, format='csv'))
head(nect)
summary(nect)
size=strsplit(as.character(nect$Location), ' ')
df=as.data.frame(t(matrix(unlist(size), 3)))
names(df)=c('non', 'Pair', 'Size')
nect=cbind(nect[1:nrow(df),], df[,2:3])
nect$sugar.concentration=as.numeric(as.character(nect$sugar.concentration))
nect$sugar.content..µg.=as.numeric(as.character(nect$sugar.content..µg.))
nect=nect[which(nect$sugar.concentration<1.9),]
nect_small=nect[, c('Experiment.Week','Location','Plant.number','Pair', 'Size', 'volume.of.nectar..µl.','sugar.concentration',
'sugar.content..µg.')]
head(nect_small)
zeros=which(nect_small$sugar.concentration==0)
nect_small=nect_small[-zeros, ]
nect_small=na.omit(nect_small)
##average of 5 flowers
volume=acast(nect_small[,c(1:2,6)],  Experiment.Week~Location, mean)
conc=acast(nect_small[,c(1:2, 7)],  Experiment.Week~Location, mean)
content=acast(nect_small[,c(1:2,8)],  Experiment.Week~Location, mean)
##variance of 5 flowers
volume_var=acast(nect_small[,c(1:2,6)],  Experiment.Week~Location, var)
conc_var=acast(nect_small[,c(1:2, 7)],  Experiment.Week~Location, var)
content_var=acast(nect_small[,c(1:2,8)],  Experiment.Week~Location, var)
vol=melt(volume)
sugar.conc=melt(conc)
sugar.content=melt(content)
vol_var=melt(volume_var)
sugar.conc_var=melt(conc_var)
sugar.content_var=melt(content_var)
mean_nect=cbind(vol[,1:2], data.frame(vol$value, sugar.conc$value, sugar.content$value, vol_var$value, sugar.conc_var$value,sugar.content_var$value))
names(mean_nect)=c("Experiment.Week", "Location", 'Volume', "Sugar_conc", 'Sugar_content', 'Volume_var', 'Sugar_conc_var', 'Sugar_content_var')
mean_nect=mean_nect[order(mean_nect$Experiment.Week), ]
head(mean_nect)
add2=mean_nect[mean_nect$Experiment.Week==2,]
add3=mean_nect[mean_nect$Experiment.Week==3,]
mean_nect=rbind(mean_nect[mean_nect$Experiment.Week==1,], add2,add2, add3, add3)
mean_nect=mean_nect[order(mean_nect$Location), ]
#
mydat_small=mydat_small[-which(mydat_small$Experiment.Week==4),]
#
mydat_small=mydat_small[order(mydat_small$Location), ]
merged=cbind(mydat_small, mean_nect)
names(merged)
merged=merged[, -c(12:13)]
#merge weather station data with pollinator visitation data
url2='docs.google.com/spreadsheets/d/1Wm0LVMGEWBQnz6jsSKjdrzKi5ARMhUAzZMN_chvg7M4/edit?usp=sharing'
weather=read.csv(text=gsheet2text(url2, format='csv'))
head(weather)
weather=weather[-which(weather$Time=="Time"),]
summary(weather)
summary(merged)
obs_start=paste(merged$Date, merged$Start.Time)
obs_start_pos=as.POSIXct(obs_start , format = "%m/%d/%Y %H:%M")
obs_end=paste(merged$Date, merged$End.Time)
obs_end_pos=as.POSIXct(obs_end , format = "%m/%d/%Y %H:%M")
weatime=paste(weather$Date, weather$Time)
weatime_pos=as.POSIXct(weatime , format = "%m/%d/%Y %H:%M %p")
#
#
comp=weatime_pos[68]
a=obs_start_pos[11]
b=obs_end_pos[11]
obs_start_pos_rd=round.POSIXct(obs_start_pos, 'quarter hours')
obs_end_pos_rd=round.POSIXct(obs_end_pos, 'quarter hours')
weatime_pos_rd=round.POSIXct(weatime_pos, 'quarter hours')
weather_index=c()
for(i in 1:length(obs_start_pos)){
#tms=weatime_pos[which(weatime_pos_rd==obs_start_pos_rd[i]|weatime_pos_rd==obs_start_pos_rd[i]-15*60|weatime_pos_rd==obs_end_pos_rd[i]|(weatime_pos_rd==obs_end_pos_rd[i]+15*60))]
tms=weatime_pos[which(weatime_pos_rd==obs_start_pos_rd[i]|weatime_pos_rd==obs_end_pos_rd[i])]
if(length(tms)==0){
print(i)
weather_index[i]=0}
else{
weather_index[i]=which(weatime_pos_rd==obs_start_pos_rd[i]|weatime_pos_rd==obs_end_pos_rd[i])[1]
}}
weather_match=weather[weather_index,]
dim(weather_match)
bee_data_final$Start.Time=obs_start_pos
bee_data_final$End.Time=obs_end_pos
head(bee_data_final)
tail(bee_data_final)
#data formatting for further pollinator visitation analysis
#
library(reshape2)
setwd("/Users/HMCLoaner/bee")
round.POSIXct <- function(x, units = c("mins", "5 mins", "10 mins", "15
mins", "quarter hours", "30 mins", "half hours", "hours")){
if(is.numeric(units)) units <- as.character(units)
units <- match.arg(units)
r <- switch(units,
"mins" = 60,
"5 mins" = 60*5,
"10 mins" = 60*10,
"15 mins"=, "quarter hours" = 60*15,
"30 mins"=, "half hours" = 60*30,
"hours" = 60*60
)
H <- as.integer(format(x, "%H"))
M <- as.integer(format(x, "%M"))
S <- as.integer(format(x, "%S"))
D <- format(x, "%Y-%m-%d")
secs <- 3600*H + 60*M + S
as.POSIXct(round(secs/r)*r, origin=D)
}
#Field observation data from google docs
url='docs.google.com/spreadsheets/d/1LKr8Ken8p1jpTGpbn2a_napP6uNJ4sEnN8gdDSEQGxY/edit#gid=1630939193'
mydat=read.csv(text=gsheet2text(url, format='csv'))
head(mydat)
size=strsplit(as.character(mydat$Location), ' ')
df=as.data.frame(t(matrix(unlist(size), 3)))
names(df)=c('non', 'Pair', 'Size')
mydat=cbind(mydat, df[,2:3])
head(mydat)
names(mydat)
mydat$tot_flowers=mydat$Avg.open.flowers.per.inflorescenc*mydat$Total.inflorescenses
mydat_small=mydat[, c('Date', 'Experiment.Week','Location', 'Plant.Number','Pair','Size', 'Start.Time',
'End.Time', 'Avg.open.flowers.per.inflorescence', 'Total.inflorescenses', 'Honeybees')]
#nectar data from google docs
url='docs.google.com/spreadsheets/d/1LKr8Ken8p1jpTGpbn2a_napP6uNJ4sEnN8gdDSEQGxY/edit#gid=212997740'
nect=read.csv(text=gsheet2text(url, format='csv'))
head(nect)
summary(nect)
size=strsplit(as.character(nect$Location), ' ')
df=as.data.frame(t(matrix(unlist(size), 3)))
names(df)=c('non', 'Pair', 'Size')
nect=cbind(nect[1:nrow(df),], df[,2:3])
nect$sugar.concentration=as.numeric(as.character(nect$sugar.concentration))
nect$sugar.content..µg.=as.numeric(as.character(nect$sugar.content..µg.))
nect=nect[which(nect$sugar.concentration<1.9),]
nect_small=nect[, c('Experiment.Week','Location','Plant.number','Pair', 'Size', 'volume.of.nectar..µl.','sugar.concentration',
'sugar.content..µg.')]
head(nect_small)
zeros=which(nect_small$sugar.concentration==0)
nect_small=nect_small[-zeros, ]
nect_small=na.omit(nect_small)
##average of 5 flowers
volume=acast(nect_small[,c(1:2,6)],  Experiment.Week~Location, mean)
conc=acast(nect_small[,c(1:2, 7)],  Experiment.Week~Location, mean)
content=acast(nect_small[,c(1:2,8)],  Experiment.Week~Location, mean)
##variance of 5 flowers
volume_var=acast(nect_small[,c(1:2,6)],  Experiment.Week~Location, var)
conc_var=acast(nect_small[,c(1:2, 7)],  Experiment.Week~Location, var)
content_var=acast(nect_small[,c(1:2,8)],  Experiment.Week~Location, var)
vol=melt(volume)
sugar.conc=melt(conc)
sugar.content=melt(content)
vol_var=melt(volume_var)
sugar.conc_var=melt(conc_var)
sugar.content_var=melt(content_var)
mean_nect=cbind(vol[,1:2], data.frame(vol$value, sugar.conc$value, sugar.content$value, vol_var$value, sugar.conc_var$value,sugar.content_var$value))
names(mean_nect)=c("Experiment.Week", "Location", 'Volume', "Sugar_conc", 'Sugar_content', 'Volume_var', 'Sugar_conc_var', 'Sugar_content_var')
mean_nect=mean_nect[order(mean_nect$Experiment.Week), ]
head(mean_nect)
add2=mean_nect[mean_nect$Experiment.Week==2,]
add3=mean_nect[mean_nect$Experiment.Week==3,]
mean_nect=rbind(mean_nect[mean_nect$Experiment.Week==1,], add2,add2, add3, add3)
mean_nect=mean_nect[order(mean_nect$Location), ]
#
mydat_small=mydat_small[-which(mydat_small$Experiment.Week==4),]
#
mydat_small=mydat_small[order(mydat_small$Location), ]
merged=cbind(mydat_small, mean_nect)
names(merged)
merged=merged[, -c(12:13)]
#merge weather station data with pollinator visitation data
url2='docs.google.com/spreadsheets/d/1Wm0LVMGEWBQnz6jsSKjdrzKi5ARMhUAzZMN_chvg7M4/edit?usp=sharing'
weather=read.csv(text=gsheet2text(url2, format='csv'))
head(weather)
weather=weather[-which(weather$Time=="Time"),]
summary(weather)
summary(merged)
obs_start=paste(merged$Date, merged$Start.Time)
obs_start_pos=as.POSIXct(obs_start , format = "%m/%d/%Y %H:%M")
obs_end=paste(merged$Date, merged$End.Time)
obs_end_pos=as.POSIXct(obs_end , format = "%m/%d/%Y %H:%M")
weatime=paste(weather$Date, weather$Time)
weatime_pos=as.POSIXct(weatime , format = "%m/%d/%Y %H:%M %p")
#
#
comp=weatime_pos[68]
a=obs_start_pos[11]
b=obs_end_pos[11]
obs_start_pos_rd=round.POSIXct(obs_start_pos, 'quarter hours')
obs_end_pos_rd=round.POSIXct(obs_end_pos, 'quarter hours')
weatime_pos_rd=round.POSIXct(weatime_pos, 'quarter hours')
weather_index=c()
for(i in 1:length(obs_start_pos)){
#tms=weatime_pos[which(weatime_pos_rd==obs_start_pos_rd[i]|weatime_pos_rd==obs_start_pos_rd[i]-15*60|weatime_pos_rd==obs_end_pos_rd[i]|(weatime_pos_rd==obs_end_pos_rd[i]+15*60))]
tms=weatime_pos[which(weatime_pos_rd==obs_start_pos_rd[i]|weatime_pos_rd==obs_end_pos_rd[i])]
if(length(tms)==0){
print(i)
weather_index[i]=0}
else{
weather_index[i]=which(weatime_pos_rd==obs_start_pos_rd[i]|weatime_pos_rd==obs_end_pos_rd[i])[1]
}}
weather_match=weather[weather_index,]
dim(weather_match)
bee_data_final=cbind(merged, weather_match[,c('Temperature', 'Humidity', 'Wind','Speed','Gust', 'Pressure','Solar')])
bee_data_final$Start.Time=obs_start_pos
bee_data_final$End.Time=obs_end_pos
bee_data_final=bee_data_final[order(bee_data_final$Date),]
write.csv(bee_data_final, file="pollinator_visitation_fullData.csv")
tail(bee_data_final)
write.csv(bee_data_final, file="pollinator_visitation_fullData.csv")
mydat_small=read.csv('pollinator_visitation_fullData.csv')
system('mkdir 6-08-17')
names(mydat_small)
ggplot(mydat_small, aes(x=Total.inflorescenses, y=Honeybees, color=Size, group=Pair))+
geom_line(color='gray')+
geom_point()+
facet_wrap(~Date)+
theme_bw()
ggplot(mydat_small, aes(x=Total.inflorescenses*Avg.open.flowers.per.inflorescence, y=Honeybees, color=Size, group=Pair))+
geom_line(color='gray')+
geom_point()+
facet_wrap(~Date)+
labs(x="Total Flowers")+
theme_bw()
ggplot(mydat_small, aes(x=sugar.conc.value, y=Honeybees, group=pair, color=size))+
geom_point()+
geom_line(color='gray')+
facet_wrap(~Date)+
theme_bw()
ggplot(mydat_small, aes(x=sugar.conc.value, y=Honeybees, group=Pair, color=Size))+
geom_point()+
geom_line(color='gray')+
facet_wrap(~Date)+
theme_bw()
names(mydat_small)
ggplot(mydat_small, aes(x=Sugar_conc, y=Honeybees, group=Pair, color=Size))+
geom_point()+
geom_line(color='gray')+
facet_wrap(~Date)+
theme_bw()
png("6-08-17/beeVconc.png")
ggplot(mydat_small, aes(x=Sugar_conc, y=Honeybees, group=Pair, color=Size))+
geom_point()+
geom_line(color='gray')+
facet_wrap(~Date)+
theme_bw()
graphics.off()
png("6-08-17/beeVcontent.png")
ggplot(mydat_small, aes(x=Sugar_content, y=Honeybees, group=Pair, color=Size))+
geom_point()+
geom_line(color='gray')+
facet_wrap(~Date)+
theme_bw()
graphics.off()
png("6-08-17/beeVvol.png")
ggplot(mydat_small, aes(x=Volume, y=Honeybees, group=Pair, color=Size))+
geom_point()+
geom_line(color='gray')+
facet_wrap(~Date)+
theme_bw()
graphics.off()
boo=c()
for (i in 1:ncol(mydat_small)){
boo[i]=is.numeric(mydat_small[,i])
}
boo
mydat_small_val=mydat_small[,boo]
names(mydat_small_val)
head(mydat_small)
mydat_small_val=mydat_small_val[,-1]
names(mydat_small_val)
mydat_small$Experiment.Week=as.factor(mydat_small$Experiment.Week)
mydat_small$Experiment.Week
mydat_small$Plant.Number=as.factor(mydat_small$Plant.Number)
mydat_small$Experiment.Week=as.factor(mydat_small$Experiment.Week)
mydat_small$Plant.Number=as.factor(mydat_small$Plant.Number)
mydat_small$Pair=as.factor(mydat_small$Pair)
boo=c()
for (i in 1:ncol(mydat_small)){
boo[i]=is.numeric(mydat_small[,i])
}
boo
mydat_small_val=mydat_small[,boo]
mydat_small_val=mydat_small_val[,-1]
names(mydat_small_val)
my_fn <- function(data, mapping, ...){
p <- ggplot(data = data, mapping = mapping) +
geom_point() +
geom_smooth(method=lm, fill="blue4", color="blue1", ...)
p
}
gg=ggpairs(mydat_small_val, lower=list(continuous=my_fn))
gg
warnings()
mydat_small_val$Date
mydat_small$Date
pdf('6-08-17/pairwise_cor.pdf')
for(dts in dates){
gg=ggpairs(dts, lower=list(continuous=my_fn))
plot(gg)}
graphics.off()
dates=split(mydat_small_val, mydat_small$Date)
pdf('6-08-17/pairwise_cor.pdf')
for(dts in dates){
gg=ggpairs(dts, lower=list(continuous=my_fn))
plot(gg)}
dts
length(dates)
pdf('6-08-17/pairwise_cor.pdf')
for(i in 1:length(dates)){
dtsdates[[i]]
gg=ggpairs(dts, lower=list(continuous=my_fn))
plot(gg)}
pdf('6-08-17/pairwise_cor.pdf')
for(i in 1:length(dates)){
dts=dates[[i]]
gg=ggpairs(dts, lower=list(continuous=my_fn))
plot(gg)}
dts
gg=ggpairs(dts, lower=list(continuous=my_fn))
gg
dates=split(mydat_small_val, mydat_small$Date)
pdf('6-08-17/pairwise_cor.pdf')
for(i in 1:length(dates)){
dts=dates[[i]]
gg=ggpairs(dts, lower=list(continuous=my_fn))
gg
}
graphics.off()
for(i in 1:length(dates)){
png(paste0('6-08-17/pairwise_cor', 'i','pdf'))
dts=dates[[i]]
gg=ggpairs(dts, lower=list(continuous=my_fn))
gg
graphics.off()
}
paste0('6-08-17/pairwise_cor', 'i','pdf')
for(i in 1:length(dates)){
png(paste0('6-08-17/pairwise_cor', 'i','.png'))
dts=dates[[i]]
gg=ggpairs(dts, lower=list(continuous=my_fn))
gg
graphics.off()
}
for(i in 1:length(dates)){
png(paste0('6-08-17/pairwise_cor', i,'.png'))
dts=dates[[i]]
ggpairs(dts, lower=list(continuous=my_fn))
graphics.off()
}
png(paste0('6-08-17/pairwise_cor.png'))
for(i in 1:length(dates)){
dts=dates[[i]]
ggpairs(dts, lower=list(continuous=my_fn))
}
graphics.off()
